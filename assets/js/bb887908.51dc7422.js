"use strict";(self.webpackChunkdocs_garz_dev=self.webpackChunkdocs_garz_dev||[]).push([[6463],{1084:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var t=i(4848),r=i(8453);const s={},o="Gateways and routing",a={id:"os/cisco/routing_gateways",title:"Gateways and routing",description:"Configuring gateways, static and dynamic routing and OSPF areas on a Cisco device.",source:"@site/docs/os/cisco/040_routing_gateways.md",sourceDirName:"os/cisco",slug:"/os/cisco/routing_gateways",permalink:"/os/cisco/routing_gateways",draft:!1,unlisted:!1,editUrl:"https://github.com/garzj/docs-diary/edit/master/docs/os/cisco/040_routing_gateways.md",tags:[],version:"current",lastUpdatedBy:"garzj",sidebarPosition:40,frontMatter:{},sidebar:"autoSidebar",previous:{title:"VLANs and trunking",permalink:"/os/cisco/vlans-trunking"},next:{title:"Spanning tree",permalink:"/os/cisco/spanning-tree"}},d={},c=[{value:"Default gateway",id:"default-gateway",level:2},{value:"Static Routing",id:"static-routing",level:2},{value:"Wildcard routes",id:"wildcard-routes",level:3},{value:"Dynamic routing",id:"dynamic-routing",level:2},{value:"OSPF",id:"ospf",level:3},{value:"Terminology",id:"terminology",level:3},{value:"Packet types",id:"packet-types",level:4},{value:"Configuration",id:"configuration",level:4},{value:"EIGRP",id:"eigrp",level:3},{value:"Terminology",id:"terminology-1",level:4},{value:"Configuration",id:"configuration-1",level:4},{value:"Redistributing routes",id:"redistributing-routes",level:2},{value:"Example: bridging OSPF and EIGRP",id:"example-bridging-ospf-and-eigrp",level:3},{value:"Evaluation",id:"evaluation",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"gateways-and-routing",children:"Gateways and routing"}),"\n",(0,t.jsx)(n.p,{children:"Configuring gateways, static and dynamic routing and OSPF areas on a Cisco device."}),"\n",(0,t.jsxs)(n.p,{children:["A route of a packet is normally chosen depending on the ",(0,t.jsx)(n.a,{href:"https://www.cisco.com/c/en/us/support/docs/ip/border-gateway-protocol-bgp/15986-admin-distance.html#toc-hId-805485471",children:"default distance value table"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"default-gateway",children:"Default gateway"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cisco-ios",children:"ip default-gateway 192.168.0.254\nipv6 default-gateway fe80::1\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Default gateways don't work on routers when IP routing is active. One would have to use a ",(0,t.jsx)(n.a,{href:"#wildcard-routes",children:"wildcard route"})," instead."]}),"\n",(0,t.jsx)(n.h2,{id:"static-routing",children:"Static Routing"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cisco-ios",children:"! Enable routing\n! By default, a router would only forward packets that are directly targeted at one of its interfaces\nip routing\nipv6 unicast-routing\n\n! Example routes\nip route 192.168.5.0 255.255.255.0 192.168.0.1\nipv6 route 2001:db8:acad:5::/64 fe80::7\n"})}),"\n",(0,t.jsx)(n.h3,{id:"wildcard-routes",children:"Wildcard routes"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cisco-ios",children:"ip route 0.0.0.0 0.0.0.0 192.168.0.254\nipv6 route ::/64 fe80::1\n\n! Specify outgoing interface\nip route 0.0.0.0 0.0.0.0 gi0/0/0\n\n! Floating static route (higher administrative distance of 5)\nip route 0.0.0.0 0.0.0.0 gi0/0/1 5\n"})}),"\n",(0,t.jsx)(n.h2,{id:"dynamic-routing",children:"Dynamic routing"}),"\n",(0,t.jsx)(n.h3,{id:"ospf",children:"OSPF"}),"\n",(0,t.jsx)(n.h3,{id:"terminology",children:"Terminology"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"OSPF area"}),": a routing domain under which routes are propagated"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"SPF algorithm"}),": shortest path first algorithm (using Dijkstra's)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"adjacency database"}),": list of neighbor routers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"link-state database (LSDB)"}),": database describing the whole topology (the same for routers in the same area)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"forwarding database (aka routing table)"}),": generated list of next-hop routes (from the link-state db with the SPF algorithm)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"loopback interfaces"}),": can be configured with an IP address for higher availability, explained in the ",(0,t.jsx)(n.a,{href:"./administration#loopback-interfaces",children:"administration chapter"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"router id"}),": id for picking DR and BDR, can be the following (ordered by priority)","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"configured router id (highest priority)"}),"\n",(0,t.jsx)(n.li,{children:"loopback ip address"}),"\n",(0,t.jsx)(n.li,{children:"highest ip address of all interfaces"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"DR"}),": designated router, elected for each segment (Layer 2 broadcast domain) to reduce OSPF packets"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"BDR"}),": backup designated router"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"cost"}),": the cost on an interface is used by the SPF algorithm to pick the best path"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"reference-bandwidth"}),": default cost = interface-bandwidth / reference-bandwidth (rounded up to an integer)"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"packet-types",children:"Packet types"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"hello"}),": to create the adjacency db"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"database desc (DBD)"}),": describes a link-state db, so other routers know what they are missing"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"link state"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"request (LSR)"}),": request a specific missing link state advertisement (LSA)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update (LSU)"}),": contains the LSAs with data"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ack (LSAck)"}),": acknowledge the receipt"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cisco-ios",children:"interface loopback 0\n  ip address 2.2.2.2 255.255.255.255\n  no shutdown\n\n! In OSPF, the process-id is local to the device for identification\n! router ospf <process-id>\nrouter ospf 10\n  router-id 1.1.1.1\n\n  ! Disable OSPF packet propagation on an interface (i.e. on loopbacks)\n  passive-interface lo0\n\n  ! If configured, should be on all devices in the network\n  auto-cost reference-bandwidth 1000\n\n  ! Propagates default static routes to OSPF\n  default-information originate\n\n  ! * Either add a network to OSPF here\n  network 192.168.42.0 0.0.0.255 area 0\n\ninterface gi0/0/0\n  ! * Or add the network from the interface directly\n  ip ospf 10 area 0\n\n  ! Optional settings\n  ip ospf cost 10\n  ip ospf hello-interval 5\n  ip ospf dead-interval 20\n\n  no shutdown\n  ip address 192.168.42.254 255.255.255.0\n"})}),"\n",(0,t.jsx)(n.h3,{id:"eigrp",children:"EIGRP"}),"\n",(0,t.jsx)(n.h4,{id:"terminology-1",children:"Terminology"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Autonomous system (AS)"}),": a routing domain under which routes are propagated (like the OSPF area)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"metric weights"}),": numbers that change how the shortest route is calculated"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"router id"}),": the router id is picked the same way as in OSPF"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"configuration-1",children:"Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cisco-ios",children:"interface loopback 0\n  ip address 2.2.2.2 255.255.255.255\n  no shutdown\n\n! Whe autonomous-system-no identifies the AS domain\n! router eigrp <autonomous-system-no>\nrouter eigrp 100\n  eigrp router-id 1.1.1.1\n\n  ! Disable OSPF packet propagation on an interface (i.e. to an ISP)\n  passive-interface gi1/0/1\n\n  ! Weights have to be the same on all devices in the AS domain\n  ! metric weights <type> <bandwidth> <load> <delay> <reliability> <MTU>\n  metric weights 0 2 0 1 0 0\n\n  network 192.168.42.0 0.0.0.255\n\ninterface gi0/0/0\n  no shutdown\n  ip address 192.168.42.254 255.255.255.0\n"})}),"\n",(0,t.jsx)(n.h2,{id:"redistributing-routes",children:"Redistributing routes"}),"\n",(0,t.jsx)(n.p,{children:"The redistribute command is useful to share routes from one routing protocol to another."}),"\n",(0,t.jsx)(n.h3,{id:"example-bridging-ospf-and-eigrp",children:"Example: bridging OSPF and EIGRP"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cisco-ios",children:"router eigrp 100\n  redistribute ospf 1\n\nrouter ospf 1\n  redistribute eigrp 100 subnets\n"})}),"\n",(0,t.jsx)(n.h2,{id:"evaluation",children:"Evaluation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cisco-ios",metastring:'title="#"',children:"! Viewing routing tables\nshow ip route\nshow ip route static\nshow ipv6 route\nshow ipv6 route static\n\n! Tracing the route to a device\ntraceroute 192.168.5.3\n\n! OSPF\nshow ip protocols | include Router ID\nshow ip ospf neighbor\nshow ip ospf database\nshow ip ospf interface gi0/0/0\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(6540);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);